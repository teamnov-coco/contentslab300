!function(e){var t={};function n(i){if(t[i])return t[i].exports;var r=t[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(i,r,function(t){return e[t]}.bind(null,r));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";function i(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}n.r(t);var r=function(){function e(t,n){var i=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.element=document.getElementById(t),this.elementWidth=this.element.clientWidth,this.idx=0,this.maxIdx=n-1,this.isScrolling=!1,this.startX=0,this.memoryX=0,this.direction=null,this.moveEventCallback=null,this.element.addEventListener("touchstart",(function(e){i.sliderTouchStartListener(e)}),{passive:!0,capture:!1}),this.element.addEventListener("touchmove",(function(e){i.sliderTouchMoveListener(e)}),{passive:!0,capture:!1}),this.element.addEventListener("touchend",(function(e){i.sliderTouchEndListener(e)}),{passive:!0,capture:!1})}var t,n,r;return t=e,(n=[{key:"_scrollTo",value:function(e,t,n){var i=this;n=n||600;var r=(new Date).getTime(),o=r+n,s=t-e;requestAnimationFrame((function t(){var l=(new Date).getTime(),a=(l-r)/n;a=1===a?1:1-Math.pow(2,-10*a),l<=o?(i.element.scrollLeft=e+a*s,requestAnimationFrame(t)):i.element.scrollLeft=i.idx*i.elementWidth}))}},{key:"sliderTouchStartListener",value:function(e){this.isScrolling=!0,this.startX=e.touches[0].screenX}},{key:"sliderTouchMoveListener",value:function(e){var t=e.touches[0].screenX,n=Math.abs(Math.abs(t)-Math.abs(this.memoryX));10<=n&&(n=10),this.memoryX<t&&0!=this.memoryX?(this.element.scrollLeft-=n,this.direction=40>Math.abs(Math.abs(t)-Math.abs(this.startX))?null:"right"):this.memoryX>t&&(this.element.scrollLeft+=n,this.direction=40>Math.abs(Math.abs(t)-Math.abs(this.startX))?null:"left"),this.memoryX=t}},{key:"sliderTouchEndListener",value:function(e){this.isScrolling=!1,this.startX=0,"left"===this.direction&&this.maxIdx!=this.idx?(this.idx++,this._scrollTo(this.element.scrollLeft,this.idx*this.elementWidth,300),null!=this.moveEventCallback&&this.moveEventCallback({direction:"left"})):"right"===this.direction&&0!=this.idx?(this.idx--,this._scrollTo(this.element.scrollLeft,this.idx*this.elementWidth,300),null!=this.moveEventCallback&&this.moveEventCallback({direction:"right"})):this._scrollTo(this.element.scrollLeft,this.idx*this.elementWidth,50),this.memoryX=0}},{key:"resizingWrapper",value:function(){this.elementWidth=this.element.clientWidth,this.element.scrollLeft=this.idx*this.elementWidth}},{key:"moveTo",value:function(e){0>e||this.maxIdx<e?console.error("Overflow Slider Index."):(this.idx=e,this._scrollTo(this.element.scrollLeft,this.idx*this.elementWidth,300))}},{key:"prev",value:function(){0!=this.idx&&this.moveTo(--this.idx)}},{key:"next",value:function(){this.maxIdx!=this.idx&&this.moveTo(++this.idx)}},{key:"addMoveEventListener",value:function(e){this.moveEventCallback=e}},{key:"removeMoveEventListener",value:function(){this.moveEventCallback=null}}])&&i(t.prototype,n),r&&i(t,r),e}();function o(e,t){var n;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(n=function(e,t){if(!e)return;if("string"==typeof e)return s(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return s(e,t)}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var i=0,r=function(){};return{s:r,n:function(){return i>=e.length?{done:!0}:{done:!1,value:e[i++]}},e:function(e){throw e},f:r}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,l=!0,a=!1;return{s:function(){n=e[Symbol.iterator]()},n:function(){var e=n.next();return l=e.done,e},e:function(e){a=!0,o=e},f:function(){try{l||null==n.return||n.return()}finally{if(a)throw o}}}}function s(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,i=new Array(t);n<t;n++)i[n]=e[n];return i}var l=new r("cardWrap",10),a=document.getElementById("nav"),c=a.clientWidth,u=c/5,h=0;a.addEventListener("click",(function(e){var t,n=o(a.children);try{for(n.s();!(t=n.n()).done;){var i=t.value.classList;i.contains("on")&&i.remove("on")}}catch(e){n.e(e)}finally{n.f()}var r=e.target;r.classList.add("on");var s=r.dataset.idx;h<s&&2<s?a.scrollLeft+=u:h>s&&7>s&&(a.scrollLeft-=u),l.moveTo(s),h=s})),l.addMoveEventListener((function(e){var t,n=a.children,i=o(n);try{for(i.s();!(t=i.n()).done;){var r=t.value.classList;r.contains("on")&&r.remove("on")}}catch(e){i.e(e)}finally{i.f()}var s=l.idx;n[s].classList.add("on"),h<s&&2<s?a.scrollLeft+=u:h>s&&7>s&&(a.scrollLeft-=u),h=s})),window.addEventListener("touchstart",(function(e){l.isScrolling&&e.preventDefault()}),{passive:!1,capture:!1}),window.addEventListener("resize",(function(e){l.resizingWrapper(),c=a.clientWidth,u=c/5}))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,